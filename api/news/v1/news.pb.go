// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: api/news/v1/news.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	v1 "github.com/lulu-ls/st-api/api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     int32 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`         // app id
	ChannelId int32 `protobuf:"varint,2,opt,name=channelId,proto3" json:"channelId,omitempty"` // 渠道 id
	Id        int32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNewsRequest) Reset() {
	*x = GetNewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_news_v1_news_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsRequest) ProtoMessage() {}

func (x *GetNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_news_v1_news_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsRequest.ProtoReflect.Descriptor instead.
func (*GetNewsRequest) Descriptor() ([]byte, []int) {
	return file_api_news_v1_news_proto_rawDescGZIP(), []int{0}
}

func (x *GetNewsRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetNewsRequest) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetNewsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetNewsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewsId      int32  `protobuf:"varint,1,opt,name=news_id,json=newsId,proto3" json:"news_id,omitempty"`
	CategoryId  int32  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle    string `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Information string `protobuf:"bytes,5,opt,name=information,proto3" json:"information,omitempty"`
	Image       string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Action      int32  `protobuf:"varint,7,opt,name=action,proto3" json:"action,omitempty"`
	Sort        int32  `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`
	StartAt     int32  `protobuf:"varint,9,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt       int32  `protobuf:"varint,10,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
	Status      int32  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   int64  `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetNewsReply) Reset() {
	*x = GetNewsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_news_v1_news_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsReply) ProtoMessage() {}

func (x *GetNewsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_news_v1_news_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsReply.ProtoReflect.Descriptor instead.
func (*GetNewsReply) Descriptor() ([]byte, []int) {
	return file_api_news_v1_news_proto_rawDescGZIP(), []int{1}
}

func (x *GetNewsReply) GetNewsId() int32 {
	if x != nil {
		return x.NewsId
	}
	return 0
}

func (x *GetNewsReply) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetNewsReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetNewsReply) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *GetNewsReply) GetInformation() string {
	if x != nil {
		return x.Information
	}
	return ""
}

func (x *GetNewsReply) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetNewsReply) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *GetNewsReply) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GetNewsReply) GetStartAt() int32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *GetNewsReply) GetEndAt() int32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *GetNewsReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetNewsReply) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetNewsReply) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListNewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *v1.Paginate `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	AppId      int32        `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                // app id
	ChannelId  int32        `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`    // channel id
	Id         int64        `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                   // id
	CategoryId int64        `protobuf:"varint,5,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // category_id
}

func (x *ListNewsRequest) Reset() {
	*x = ListNewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_news_v1_news_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsRequest) ProtoMessage() {}

func (x *ListNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_news_v1_news_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsRequest.ProtoReflect.Descriptor instead.
func (*ListNewsRequest) Descriptor() ([]byte, []int) {
	return file_api_news_v1_news_proto_rawDescGZIP(), []int{2}
}

func (x *ListNewsRequest) GetPage() *v1.Paginate {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListNewsRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListNewsRequest) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ListNewsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListNewsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type ListNewsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*GetNewsReply `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    // 列表
	Total int32           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 数量
}

func (x *ListNewsReply) Reset() {
	*x = ListNewsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_news_v1_news_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNewsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsReply) ProtoMessage() {}

func (x *ListNewsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_news_v1_news_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsReply.ProtoReflect.Descriptor instead.
func (*ListNewsReply) Descriptor() ([]byte, []int) {
	return file_api_news_v1_news_proto_rawDescGZIP(), []int{3}
}

func (x *ListNewsReply) GetList() []*GetNewsReply {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListNewsReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_api_news_v1_news_proto protoreflect.FileDescriptor

var file_api_news_v1_news_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65,
	0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65,
	0x77, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe6,
	0x02, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x65, 0x77, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22,
	0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xd4, 0x01, 0x0a, 0x04, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x63,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x77,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x73,
	0x74, 0x2d, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f,
	0x67, 0x65, 0x74, 0x12, 0x67, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x73, 0x74, 0x2d, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x39, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x6c, 0x75, 0x2d, 0x6c,
	0x73, 0x2f, 0x73, 0x74, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x77,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_news_v1_news_proto_rawDescOnce sync.Once
	file_api_news_v1_news_proto_rawDescData = file_api_news_v1_news_proto_rawDesc
)

func file_api_news_v1_news_proto_rawDescGZIP() []byte {
	file_api_news_v1_news_proto_rawDescOnce.Do(func() {
		file_api_news_v1_news_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_news_v1_news_proto_rawDescData)
	})
	return file_api_news_v1_news_proto_rawDescData
}

var file_api_news_v1_news_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_news_v1_news_proto_goTypes = []interface{}{
	(*GetNewsRequest)(nil),  // 0: api.news.v1.GetNewsRequest
	(*GetNewsReply)(nil),    // 1: api.news.v1.GetNewsReply
	(*ListNewsRequest)(nil), // 2: api.news.v1.ListNewsRequest
	(*ListNewsReply)(nil),   // 3: api.news.v1.ListNewsReply
	(*v1.Paginate)(nil),     // 4: api.common.v1.Paginate
}
var file_api_news_v1_news_proto_depIdxs = []int32{
	4, // 0: api.news.v1.ListNewsRequest.page:type_name -> api.common.v1.Paginate
	1, // 1: api.news.v1.ListNewsReply.list:type_name -> api.news.v1.GetNewsReply
	0, // 2: api.news.v1.News.GetNews:input_type -> api.news.v1.GetNewsRequest
	2, // 3: api.news.v1.News.ListNews:input_type -> api.news.v1.ListNewsRequest
	1, // 4: api.news.v1.News.GetNews:output_type -> api.news.v1.GetNewsReply
	3, // 5: api.news.v1.News.ListNews:output_type -> api.news.v1.ListNewsReply
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_news_v1_news_proto_init() }
func file_api_news_v1_news_proto_init() {
	if File_api_news_v1_news_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_news_v1_news_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_news_v1_news_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_news_v1_news_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_news_v1_news_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNewsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_news_v1_news_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_news_v1_news_proto_goTypes,
		DependencyIndexes: file_api_news_v1_news_proto_depIdxs,
		MessageInfos:      file_api_news_v1_news_proto_msgTypes,
	}.Build()
	File_api_news_v1_news_proto = out.File
	file_api_news_v1_news_proto_rawDesc = nil
	file_api_news_v1_news_proto_goTypes = nil
	file_api_news_v1_news_proto_depIdxs = nil
}
